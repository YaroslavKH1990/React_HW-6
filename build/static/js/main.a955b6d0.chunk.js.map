{"version":3,"sources":["components/Container/container.module.css","redux/actions.js","redux/reducer.js","redux/store.js","services/service-api.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contacts","phonebookReducer","store","configureStore","reducer","devTools","process","addContact","contact","axios","post","deleteContact","delete","defaults","baseURL","getContacts","getFilter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","onSubmit","a","serviceApi","data","operations","resetName","resetNumber","e","preventDefault","includeName","reduce","acc","includeNumber","alert","newContact","type","value","onChange","currentTarget","ContactList","onDeleteContact","then","catch","map","onClick","Filter","event","actions","target","Container","children","className","style","container","App","loadingContacts","useEffect","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a955b6d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__2MNJF\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsRequest]: () => null,\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactRequest]: () => null,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactRequest]: () => null,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport phonebookReducer from \"./reducer\";\r\n\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nexport function fetchContacts() {\r\n    return axios.get(`/contacts`);\r\n}\r\n\r\nexport function addContact(contact) {\r\n    return axios.post('/contacts', contact);\r\n}\r\nexport function deleteContact(id) {\r\n    return axios.delete(`/contacts/${id}`)\r\n}\r\n","import * as serviceApi from \"../services/service-api\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./actions\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await serviceApi.fetchContacts();\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await serviceApi.addContact(contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  serviceApi\r\n    .deleteContact(id)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getLoading = (state) => state.contacts.loading;\r\nexport const getError = (state) => state.contacts.error;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    \r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as operations from '../../redux/operations';\r\nimport { getContacts } from '../../redux/selectors';\r\n\r\nexport default function ContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onSubmit = (name, number) =>\r\n    dispatch(operations.addContact(name, number));\r\n\r\n  const newContact = () => {\r\n    const includeName = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      [],\r\n    );\r\n    const includeNumber = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      [],\r\n    );\r\n    if (name === '' || number === '') {\r\n      alert('Please enter all fields!');\r\n      return true;\r\n    }\r\n    if (includeName.includes(name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return true;\r\n    } else if (includeNumber.includes(number)) {\r\n      alert(`${number} is already in contacts`);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleChangeName = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const handleChangeNumber = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    resetName();\r\n    resetNumber();\r\n    if (newContact()) {\r\n      return;\r\n    }\r\n    onSubmit(name, number);\r\n  };\r\n\r\n  const resetName = () => {\r\n    setName('');\r\n  };\r\n  const resetNumber = () => {\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChangeName}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChangeNumber}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/operations';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id}>\r\n          {`${name} : ${number}`}\r\n          {\r\n            <button\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              delete\r\n            </button>\r\n          }\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport * as actions from '../../redux/actions';\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = event => dispatch(actions.changeFilter(event.target.value));\r\n  return (\r\n    <div>\r\n      Find contacts by name:\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\nexport default Filter;\r\n","import style from \"./container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={style.container}>{children}</div>;\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport Container from './components/Container';\r\nimport { fetchContacts } from './redux/operations';\r\nimport { getLoading } from './redux/selectors';\r\n\r\nexport default function App() {\r\n  const loadingContacts = useSelector(getLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      {loadingContacts && <p>Loading...</p>}\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport  store from './redux/store';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}